{
    "notes": "# Ex. 5a: Show, Don't Tell (Show How Things are Implemented/Done with the Tech Skills)\n\n## Software Engineering Design Team Member (UBC Launch Pad)\n**Oct 2023 â€“ present**\n\n### Original:\n- Give an image of an ingredient list, implemented ingredients list, reading and parsing for an carbon footprint calculator app\n  - *Issues:* Lack of parallelism, unclear language\n\n### REVISED:\n- Converting, reading and parsing a given base64 image of an ingredient list to implement a carbon footprint calculator app in Python-Flask\n  - *Improvements:* Clearer action verbs, fixed grammar, specified image attribute and language used\n\n## Flood-Fill An Image Using Breadth-First and Depth-First Search\n**Oct 2023**\n\n### Original:\n- Implemented a flood fill algorithm on a given image that performs BFS/DFS traversal of points starting from a randomly generated set of center coordinates in the image\n  - *Issue:* Long, hard-to-read sentence\n\n### REVISED:\n- Implemented in C++ a flood-fill algorithm on a given image by performing BFS & DFS traversal of points, using a randomly generated set of coordinates as start point\n  - *Improvements:* Broke up sentence, removed unimportant details\n- Implemented function objects to determine pixel color, used stack and queue structures for BFS and DFS fills\n  - *Improvement:* Provided implementation details in separate bullet for clarity\n\n**Key Takeaways:**\n1. Use clear, active verbs\n2. Specify technologies used (e.g., Python-Flask, C++)\n3. Break long sentences into digestible points\n4. Provide relevant implementation details\n5. Remove unnecessary information for conciseness"
}