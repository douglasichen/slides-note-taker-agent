{
    "notes": "# Static Variable Access\n\n## Static Arrays\n\n```c\nint a;\nint b[10];\n\nvoid foo() {\n    ...\n    b[a] = a;\n}\n```\n\n### Static Memory Layout\n- 0x1000: value of a\n- 0x2000: value of b[0]\n- 0x2004: value of b[1]\n- ...\n- 0x2024: value of b[9]\n\n## Key Observations\n\n- Value of `a` is generally **unknown at compilation time**\n- Addresses of `b[0]`, `b[1]` ... are known statically, but which one is used here is **dynamic**\n- Compiler does not know address of `b[a]`\n  - Unless it knows the value of `a` statically (e.g., `a = 0;`)\n\n## Array Access Computation\n\n- Computed from **base address** and **index**\n- Formula: address of element = base + offset\n  - offset = index Ã— element size\n- Base address (0x2000) and element size (4) are static; index is dynamic\n\n---\n\n*2024W1 - Mike Feeley, Jonatan Schroeder, Robert Xiao, Jordon Johnson, Geoffrey Tien*"
}