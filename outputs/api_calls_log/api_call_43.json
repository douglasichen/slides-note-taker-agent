{
    "notes": "# Basic arithmetic, shifting, NOP, and halt\n\n## Arithmetic Operations\n\n| Name | Semantics | Assembly | Machine |\n|------|-----------|----------|---------|\n| register move | r[d] ← r[s] | mov rs, rd | 60sd |\n| add | r[d] ← r[d] + r[s] | add rs, rd | 61sd |\n| and | r[d] ← r[d] & r[s] | and rs, rd | 62sd |\n| inc | r[d] ← r[d] + 1 | inc rd | 63-d |\n| inc address | r[d] ← r[d] + 4 | inca rd | 64-d |\n| dec | r[d] ← r[d] - 1 | dec rd | 65-d |\n| dec address | r[d] ← r[d] - 4 | deca rd | 66-d |\n| not | r[d] ← ~r[s] | not rd | 67-d |\n\n## Logical (shifting), NOP, and halt\n\n| Name | Semantics | Assembly | Machine |\n|------|-----------|----------|---------|\n| shift left | r[d] ← r[d] << v=s | shl $v, rd | 7dss (ss>0) |\n| shift right | r[d] ← r[d] >> v=s | shr $v, rd | 7dss (ss<0) |\n| halt | halt machine | halt | F0-- |\n| nop | do nothing | nop | FF-- |\n\n*Note: 'd' represents destination register, 's' represents source register or value.*"
}