{
    "notes": "# Global Dynamic Arrays\n\n## Java\n- Array variable stores reference to array allocated dynamically with `new` statement\n```java\npublic class Foo {\n    static int a;\n    static int b[];\n    \n    void foo() {\n        b = new int[10]\n        b[a] = a;\n    }\n}\n```\n\n## C\n- Array variables can store:\n  1. Static arrays\n  2. Pointers to arrays allocated dynamically with `malloc` library procedure\n\n### Dynamic Array Example\n```c\nint a;\nint* b;\n\nvoid foo() {\n    b = malloc( 10 * sizeof(int) );\n    b[a] = a;\n}\n```\n\n### Static Array Example\n```c\nint a;\nint b_data[10];\nint* b = &b_data[0];\n```\n\n**Note:** Dynamic arrays offer flexibility in memory allocation, while static arrays have a fixed size determined at compile-time."
}