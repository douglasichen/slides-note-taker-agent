{
    "notes": "# Translating the Code: RTL and Assembly\n\n## Code Translation Process\n1. **From high level code**\n   ```c\n   int a;\n   int b[10];\n   void foo() {\n     a = 0;\n     b[a] = a;\n   }\n   ```\n\n2. **To RTL**\n   ```\n   r[0]    ← 0\n   r[1]    ← 0x1000\n   m[r[1]] ← r[0]\n   r[2]    ← m[r[1]]\n   r[3]    ← 0x2000\n   m[r[3]+4*r[2]] ← r[2]\n   ```\n\n3. **To SM213 assembly**\n   ```assembly\n   ld $0, r0\n   ld $0x1000, r1\n   st r0, (r1)\n   ld (r1), r2\n   ld $0x2000, r3\n   st r2, (r3, r2, 4)\n   ```\n\n## Instruction Set\n\n| Name | Semantics | Assembly | Machine |\n|------|-----------|----------|---------|\n| load immediate | r[d] ← v | ld $v, rd | 0d-- vvvvvvvv |\n| load base + offset | r[d] ← m[r[s]+4*p] | ld o(rs), rd | 1psd |\n| load indexed | r[d] ← m[r[s]+4*r[i]] | ld (rs, ri, 4), rd | 2sid |\n| store base + offset | m[r[d]+4*p] ← r[s] | st rs, o(rd) | 3spd |\n| store indexed | m[r[d]+4*r[i]] ← r[s] | st rs, (rd, ri, 4) | 4sdi |\n\n*Note: 2024W1 - Mike Feeley, Jonatan Schroeder, Robert Xiao, Jordon Johnson, Geoffrey Tien*"
}